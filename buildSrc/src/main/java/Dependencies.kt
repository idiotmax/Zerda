object Versions {
    const val min_sdk = 21
    const val target_sdk = 27
    const val compile_sdk = 27
    const val build_tools = "27.0.3"
    const val version_code = 1
    const val version_name = "2.0.0"
    const val android_gradle_plugin = "3.0.1"
    const val dicedmelon_jacoco_plugin = "0.1.2"
    const val gms_oss_licenses_plugin = "0.9.1"
    const val support = "27.0.2"
    const val room = "1.0.0"
    const val glide = "4.0.0"
    const val kotlin = "1.2.30"
    const val gms = "11.8.0"
    const val findbugs = "3.0.1"
    const val lottie = "2.2.0"
    const val leakcanary = "1.5.4"
    const val telemetry = "1.1.1"
    const val adjust = "4.11.4"
    const val junit = "4.12"
    const val mockito = "2.12.0"
    const val robolectric = "3.5.1"
    const val espresso = "3.0.1"
    const val test_runner = "1.0.1"
    const val uiautomator = "2.1.3"
    const val mockwebserver = "3.7.0"
}

object Libs {
    const val android_gradle_plugin = "com.android.tools.build:gradle:${Versions.android_gradle_plugin}"
    const val dicedmelon_jacoco_plugin = "com.dicedmelon.gradle:jacoco-android:${Versions.dicedmelon_jacoco_plugin}"
    const val google_oss_licenses_plugin = "com.google.gms:oss-licenses:${Versions.gms_oss_licenses_plugin}"
    const val kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
    const val app_compat_v7 = "com.android.support:appcompat-v7:${Versions.support}"
    const val customtabs = "com.android.support:customtabs:${Versions.support}"
    const val support_v4 = "com.android.support:support-v4:${Versions.support}"
    const val design = "com.android.support:design:${Versions.support}"
    const val cardview_v7 = "com.android.support:cardview-v7:${Versions.support}"
    const val support_annotations = "com.android.support:support-annotations:${Versions.support}"
    const val room_runtime = "android.arch.persistence.room:runtime:${Versions.room}"
    const val room_compiler = "android.arch.persistence.room:compiler:${Versions.room}"
    const val room_testing = "android.arch.persistence.room:testing:${Versions.room}"
    const val recyclerview_v7 = "com.android.support:recyclerview-v7:${Versions.support}"
    const val glide_compiler = "com.github.bumptech.glide:compiler:${Versions.glide}"
    const val kotlin_stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}"
    const val play_services_analytics = "com.google.android.gms:play-services-analytics:${Versions.gms}"
    const val findbugs_annotations = "com.google.code.findbugs:annotations:${Versions.findbugs}"
    const val lottie = "com.airbnb.android:lottie:${Versions.lottie}"
    const val leakcanary = "com.squareup.leakcanary:leakcanary-android:${Versions.leakcanary}"
    const val leakcanary_no_op = "com.squareup.leakcanary:leakcanary-android-no-op:${Versions.leakcanary}"
    const val telemetry = "org.mozilla.telemetry:telemetry:${Versions.telemetry}"
    const val adjust = "com.adjust.sdk:adjust-android:${Versions.adjust}"
    const val junit = "junit:junit:${Versions.junit}"
    const val mockito_core = "org.mockito:mockito-core:${Versions.mockito}"
    const val robolectric = "org.robolectric:robolectric:${Versions.robolectric}"
    const val espresso_core = "com.android.support.test.espresso:espresso-core:${Versions.espresso}"
    const val espresso_idling_resource = "com.android.support.test.espresso:espresso-idling-resource:${Versions.espresso}"
    const val espresso_contrib = "com.android.support.test.espresso:espresso-contrib:${Versions.espresso}"
    const val espresso_web = "com.android.support.test.espresso:espresso-web:${Versions.espresso}"
    const val test_runner = "com.android.support.test:runner:${Versions.test_runner}"
    const val uiautomator_v18 = "com.android.support.test.uiautomator:uiautomator-v18:${Versions.uiautomator}"
    const val mockwebserver = "com.squareup.okhttp3:mockwebserver:${Versions.mockwebserver}"
}